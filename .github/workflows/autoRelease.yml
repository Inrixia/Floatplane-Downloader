---
name: "Release"

on:
 push:
  branches:
   - "master"

jobs:
 Build:
  strategy:
   matrix:
    runs-on: [ubuntu-latest, windows-latest]
  runs-on: ${{ matrix.runs-on }}
  steps:
   - uses: actions/checkout@v4
   - name: Install pnpm ðŸ“¥
     uses: pnpm/action-setup@v4

   - name: Install Node.js ðŸ“¥
     uses: actions/setup-node@v4
     with:
      cache: "pnpm"

   - name: Install dependencies ðŸ“¥
     run: pnpm install

   - name: Build
     run: pnpm run build-${{ matrix.runs-on }}

   - name: Upload Artifact
     uses: actions/upload-artifact@v4
     with:
      name: build-${{ matrix.runs-on }}
      path: ./build/

 Release:
  needs: Build
  runs-on: ubuntu-latest
  steps:
   - name: Download All Artifacts
     uses: actions/download-artifact@v4
     with:
      path: ./build/
      merge-multiple: true

   - name: Draft release on GitHub
     uses: "marvinpinto/action-automatic-releases@latest"
     with:
      repo_token: "${{ secrets.GITHUB_TOKEN }}"
      automatic_release_tag: "latest"
      draft: true
      title: "Latest Release"
      files: build/*

 DockerHub:
  name: "Release - DockerHub"
  runs-on: "ubuntu-latest"

  steps:
   - name: Set up QEMU
     uses: docker/setup-qemu-action@v3

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v3

   - name: Login to DockerHub
     uses: docker/login-action@v3
     with:
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_PASSWORD }}

   - name: Build & Publish release on DockerHub
     uses: docker/build-push-action@v5
     with:
      push: true
      tags: inrix/floatplane-downloader:latest
      cache-from: type=gha
      cache-to: type=gha,mode=max
      platforms: linux/amd64,linux/arm64
